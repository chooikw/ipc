name: Fendermint CI - Test

# This workflow is triggered from the main CI workflow.
on:
  workflow_call:

env:
  CARGO_INCREMENTAL: '0'
  SCCACHE_CACHE_SIZE: 10G
  CC: "sccache clang"
  CXX: "sccache clang++"
  PROFILE: "ci"
  BUILDX_FLAGS: "--cache-from=type=gha --cache-to=type=gha,mode=max"

jobs:
  # Check code formatting; anything that doesn't require compilation.
  pre-compile-checks:
    # Skip tests on draft PRs, they take a long time, and drafts are for visibility.
    if: ${{ !github.event.pull_request.draft }}

    name: Build IPC Fendermint Image
    runs-on: ubuntu-latest
    env:
      RUST_BACKTRACE: full
      RUSTFLAGS: -Dwarnings

    steps:
      # https://github.com/marketplace/actions/free-disk-space-ubuntu
      - name: Free Disk Space (Ubuntu)
        uses: jlumbroso/free-disk-space@main
        with:
          tool-cache: false
          large-packages: false
          swap-storage: false
          docker-images: false
          android: true
          dotnet: true
          haskell: true

      - name: Check out the project
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install Tools
        uses: ./.github/actions/install-tools
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          rust: stable

      - name: Install Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18.19.0

      - name: Install cargo-make
        run: |
          if ! command -v cargo-make &> /dev/null
          then
              cargo install -f cargo-make
          fi

      - name: Install Foundry
        working-directory: ipc/contracts
        run: |
          curl -L https://foundry.paradigm.xyz | bash
          export PATH="$PATH:/home/runner/.config/.foundry/bin"
          foundryup

      - name: Compile IPC Abi
        env:
          PROMTAIL_CLIENT_URL: ${{ secrets.PROMTAIL_CLIENT_URL }}
        run: cd contracts && make gen

      - name: Format
        env:
          PROMTAIL_CLIENT_URL: ${{ secrets.PROMTAIL_CLIENT_URL }}
        run: cargo fmt --all --check

      - name: Clippy
        env:
          PROMTAIL_CLIENT_URL: ${{ secrets.PROMTAIL_CLIENT_URL }}
        run: cargo clippy --all

      - name: Unit Tests
        env:
          PROMTAIL_CLIENT_URL: ${{ secrets.PROMTAIL_CLIENT_URL }}
        run: cd fendermint && make build test

      - name: Build Fendermint Docker Image
        env:
          PROMTAIL_CLIENT_URL: ${{ secrets.PROMTAIL_CLIENT_URL }}
        run: cd fendermint && make docker-build
